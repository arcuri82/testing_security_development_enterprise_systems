# Spring has many properties that can be configured, eg see:
#
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
# Properties can be set in a "application.properties" file, or also in YML format in a
# "application.yml" format. Usually, YAML is preferred as more compact, less verbose.

# Properties for Database, eg where it can be found and which drivers to use.
# Note: as this is an example, and not a production-level application, here we just
# have some stub values in the properties
spring.datasource.url = "some URL to production database"
spring.datasource.username = ""
spring.datasource.password = ""
spring.datasource.driver-class-name = org.postgresql.Driver

# This is tricky. Schema handling should not really be done
# from Hibernate, but rather use an external tool like Flyway/Liquibase,
# as to avoid issues with schema migration and losing existing data.
#
# Note: this Spring property will set the "hibernate.hbm2ddl.auto" in Hibernate
spring.jpa.hibernate.ddl-auto = update

spring.jpa.database = postgresql
spring.jpa.show-sql=false

# Note: we can also create our own custom properties here, which can then be read at
# runtime in the code

#custom property which will be overridden in all config files
my.custom.foo = "main"
#custom property defined only in this configuration file
my.custom.main = "main"