<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>spring-coverage-jacoco-frontend</artifactId>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.tsdes.intro.spring.testing.coverage.jacoco</groupId>
        <artifactId>spring-coverage-jacoco</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>


    <dependencies>

        <!-- Note the dependency to the other module -->
        <dependency>
            <groupId>org.tsdes.intro.spring.testing.coverage.jacoco</groupId>
            <artifactId>spring-coverage-jacoco-backend</artifactId>
            <!--
                For the version, we use a Maven property so we do not need to update it every
                time we make a new release
            -->
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.tsdes.misc</groupId>
            <artifactId>test-utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.joinfaces</groupId>
            <artifactId>jsf-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp.jstl</groupId>
            <artifactId>javax.servlet.jsp.jstl-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>



        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
        </dependency>
    </dependencies>


    <build>
        <plugins>

            <!-- make sure we calculate code coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>

            <!--
                You can notice here that I am overriding the <configuration><argLine>
                for for Surefire and Failsafe plugins.
                In general, you would not need it. However, if for any reason you
                are customizing <argLine> (eg with -Xms and -Xmx), then you MUST add ${argLine} in it, otherwise JaCoCo will not work.

                Notice that here we inherit the configurations from the root pom.xml, in which
                <argLine> is overridden without ${argLine}. So here I must re-overwrite it.
                You might ask: why not adding ${argLine} directly in the root pom.xml?
                The reason is that the argLine variable is set up by the JaCoCo plugin, and so 
				reading it with ${argLine} would fail in all the modules not using JaCoCo.
            -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>${argLine} -Xms512m -Xmx4096m</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>${argLine} -Xms512m -Xmx4096m</argLine>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>